{
	"name": "Image Capture & Search",
	"description": "This workflow captures an image and searches for it in a database.",
	"version": "1.0.0",
	"trigger": {
		"http": {
			"method": "*",
			"path": "/:function?",
			"accept": "application/json"
		}
	},
	"steps": [
		{
			"name": "filter-request",
			"node": "@nanoservice-ts/if-else",
			"type": "module"
		}
	],
	"nodes": {
		"filter-request": {
			"conditions": [
				{
					"type": "if",
					"steps": [
						{
							"name": "image-capture-ui",
							"node": "image-capture-ui",
							"type": "module"
						}
					],
					"condition": "ctx.request.method.toLowerCase() === \"get\" && ctx.request.params.function === undefined"
				},
				{
					"type": "if",
					"steps": [
						{
							"name": "image-description",
							"node": "image-description",
							"type": "runtime.python3",
							"set_var": true
						},
						{
							"name": "embedding-clip",
							"node": "embedding-clip",
							"type": "runtime.python3"
						},
						{
							"name": "save-image",
							"node": "save-image",
							"type": "module",
							"set_var": true
						},
						{
							"name": "store-in-milvus",
							"node": "store-in-milvus",
							"type": "runtime.python3"
						}
					],
					"condition": "ctx.request.method.toLowerCase() === \"post\" && ctx.request.params.function === \"save\""
				},
				{
					"type": "if",
					"steps": [
						{
							"name": "embedding-clip-search",
							"node": "embedding-clip",
							"type": "runtime.python3"
						},
						{
							"name": "search-in-milvus",
							"node": "search-in-milvus",
							"type": "runtime.python3"
						}
					],
					"condition": "ctx.request.method.toLowerCase() === \"post\" && ctx.request.params.function === \"search\""
				},
				{
					"type": "else",
					"steps": [
						{
							"name": "method-not-allowed",
							"node": "error",
							"type": "module"
						}
					]
				}
			]
		},
		"image-capture-ui": {
			"inputs": {}
		},
		"image-description": {
			"inputs": {
				"image_base64": "${ctx.request.body.image_base64}"
			}
		},
		"embedding-clip": {
			"inputs": {
				"image_base64": "${ctx.request.body.image_base64}",
				"description": "${ctx.vars['image-description'].description}"
			}
		},
		"save-image": {
			"inputs": {
				"base64": "${ctx.request.body.image_base64}",
				"dir_path": "${process.env.WORKFLOWS_PATH.replace('workflows', 'public')}"
			}
		},
		"store-in-milvus": {
			"inputs": {
				"text_vector": "js/ctx.response.data.text_vector",
				"image_vector": "js/ctx.response.data.image_vector",
				"description": "js/ctx.vars['image-description'].description",
				"image_url": "js/ctx.vars['save-image'].url_path"
			}
		},
		"embedding-clip-search": {
			"inputs": {
				"image_base64": "js/ctx.request.body.image_base64",
				"description": "js/ctx.request.body.description"
			}
		},
		"search-in-milvus": {
			"inputs": {
				"text_vector": "js/ctx.request.body.promptText ? ctx.response.data.text_vector : undefined",
				"image_vector": "js/ctx.request.body.promptImage ? ctx.response.data.image_vector : undefined",
				"top_k": 5
			}
		}
	}
}
